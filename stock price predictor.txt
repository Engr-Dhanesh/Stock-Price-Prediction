import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load dataset
file_path = "C:/Users/LENOVO/Desktop/NFLX.csv"  # Update with the path to your downloaded dataset
stock_data = pd.read_csv(file_path)

# Convert Date column to datetime
stock_data['Date'] = pd.to_datetime(stock_data['Date'])

# Set Date column as index
stock_data.set_index('Date', inplace=True)

# Splitting data into features and target variable
X = stock_data.index.values.reshape(-1, 1)  # Using dates as features
y = stock_data['Close'].values.astype(float)  # Convert 'Close' column to float64

# Splitting data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training
model = LinearRegression()
model.fit(X_train, y_train)

# Model evaluation
train_score = model.score(X_train, y_train)
test_score = model.score(X_test, y_test)

print(f'Training Score (R^2): {train_score}')
print(f'Test Score (R^2): {test_score}')

# Predicting stock prices
predicted_prices = model.predict(X_test)

# Plotting actual and predicted prices
plt.figure(figsize=(12, 6))
plt.plot(stock_data.index, stock_data['Close'], label='Actual Prices', color='blue')
plt.plot(X_test, predicted_prices, label='Predicted Prices', color='red')

plt.title('Stock Price Prediction')
plt.xlabel('Date')
plt.ylabel('Price')
plt.legend()
plt.show()
